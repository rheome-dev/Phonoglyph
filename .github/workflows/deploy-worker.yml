name: Deploy Queue Worker

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/api/src/services/**'
      - 'apps/api/src/scripts/**'
      - 'apps/api/Dockerfile.worker'
      - 'docker-compose.yml'
  workflow_dispatch:

env:
  REGISTRY: "registry.digitalocean.com/midiviz"
  IMAGE_NAME: "stem-worker"

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Build container image
        run: docker-compose build queue-worker

      - name: Tag and push image to DigitalOcean Container Registry
        run: |
          docker tag midiviz-queue-worker:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$(echo $GITHUB_SHA | head -c7)
          docker tag midiviz-queue-worker:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$(echo $GITHUB_SHA | head -c7)
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Update deployment file
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          sed -i 's|<IMAGE>|${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:'${TAG}'|' $GITHUB_WORKSPACE/apps/api/k8s/deployment.yml

      - name: Save DigitalOcean kubeconfig
        run: |
          doctl kubernetes cluster kubeconfig save $(doctl kubernetes cluster list --format ID --no-header)

      - name: Deploy to DigitalOcean Kubernetes
        run: |
          kubectl apply -f $GITHUB_WORKSPACE/apps/api/k8s/deployment.yml
          kubectl rollout status deployment/stem-worker 